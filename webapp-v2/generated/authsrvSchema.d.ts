/* eslint no-unused-vars: 0 */

/**
 * auto-generated file
 * schema version: 20210810074820
 * This file was automatically generated by schema2type
 */
declare namespace schema {
  type Address = {
    id: number;
    streetAndNumber: string | null;
    city: string | null;
    postalCode: string | null;
    country: string | null;
    createdAt: string;
    updatedAt: string;
  }

  type Authentication = {
    id: number;
    provider: string;
    uid: string;
    createdAt: string;
    updatedAt: string;
  }

  type Invoice = {
    id: number;
    stripeInvoiceId: string | null;
    stripeInvoiceNumber: string | null;
    stripePdfUrl: string | null;
    finalizedAt: string | null;
    paidAt: string | null;
    markedUncollectibleAt: string | null;
    voidedAt: string | null;
    taxRate: number | null;
    subtotal: number | null;
    total: number | null;
    status: string | null;
    createdAt: string;
    updatedAt: string;
  }

  type Membership = {
    id: number;
    role: number;
    status: number;
    jwtTokenKey: string | null;
    createdAt: string;
    updatedAt: string;
    notifyDeviceUpdate: boolean | null;
    notifyInvoice: boolean | null;
  }

  type Organisation = {
    id: number;
    name: string | null;
    vatNumber: string | null;
    createdAt: string;
    updatedAt: string;
    stripeCustomerId: string | null;
    contact: string | null;
    invoiceEmailAddress: string | null;
    invoiceName: string | null;
    splunkEnabled: boolean | null;
    splunkEventCollectorUrl: string | null;
    splunkAuthenticationToken: string | null;
    syslogEnabled: boolean | null;
    syslogHostnameOrAddress: string | null;
    syslogUdpPort: string | null;
  }

  type Subscription = {
    id: number;
    stripeSubscriptionId: string | null;
    stripeSubscriptionItemId: string | null;
    status: string;
    currentDevicesAmount: number;
    newDevicesAmount: number | null;
    notifyInvoices: boolean;
    notifyDeviceUpdates: boolean;
    taxRate: number | null;
    periodStart: string | null;
    periodEnd: string | null;
    createdAt: string;
    updatedAt: string;
  }

  type UsageRecord = {
    id: number;
    amount: number;
    date: string;
    createdAt: string;
    updatedAt: string;
  }

  type User = {
    id: number;
    name: string | null;
    email: string;
    cryptedPassword: string | null;
    salt: string | null;
    jwtTokenKey: string | null;
    role: number | null;
    invited: boolean | null;
    createdAt: string;
    updatedAt: string;
    activationState: string | null;
    activationToken: string | null;
    activationTokenExpiresAt: string | null;
    resetPasswordToken: string | null;
    resetPasswordTokenExpiresAt: string | null;
    resetPasswordEmailSentAt: string | null;
    accessCountToResetPasswordPage: number | null;
    loginToken: string | null;
  }
}
export default schema;
