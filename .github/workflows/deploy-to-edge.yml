name: Deploy to edge
on:
  push:
    branches:
      - master

jobs:
  apisrv:
    timeout-minutes: 20
    runs-on: ubuntu-20.04
    outputs:
      sha_tag: ${{ steps.build.outputs.sha_tag }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true

      - uses: docker/setup-buildx-action@v1

      - uses: ./.github/actions/build-container
        id: build
        with:
          basename: apisrv
          dockerfile: ./apisrv/build/Dockerfile
          cr_token: ${{ secrets.CR_TOKEN }}
          always_push: true


  authsrv:
    timeout-minutes: 20
    runs-on: ubuntu-20.04
    outputs:
      sha_tag: ${{ steps.build.outputs.sha_tag }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v1

      - uses: ./.github/actions/build-container
        id: build
        with:
          basename: authsrv
          dockerfile: ./authsrv2/build/Dockerfile
          cr_token: ${{ secrets.CR_TOKEN }}
          always_push: true


  appsrv:
    timeout-minutes: 20
    runs-on: ubuntu-20.04
    outputs:
      sha_tag: ${{ steps.build.outputs.sha_tag }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v1
        
      - uses: ./.github/actions/build-container
        id: build
        with:
          basename: appsrv
          dockerfile: ./webapp-v2/build/Dockerfile
          cr_token: ${{ secrets.CR_TOKEN }}
          always_push: true

  deploy:
    runs-on: ubuntu-20.04
    needs:
      - apisrv
      - authsrv
      - appsrv
    steps:
      - uses: actions/checkout@v3
        with:
          repository: immune-gmbh/operations
          fetch-depth: 0
          ref: master
          token: ${{ secrets.REPO_TOKEN }}

      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - uses: imranismail/setup-kustomize@v1

      - run: |
          echo "${{  needs.appsrv.outputs.sha_tag }}"
          echo "${{  needs.apisrv.outputs.sha_tag }}"
          echo "${{  needs.authsrv.outputs.sha_tag }}"
          SHA_TAG=$(echo "${{  needs.authsrv.outputs.sha_tag }}" | cut -d ":" -f 2)
          cd guard/overlays/edge
          kustomize edit set image appsrv=${{ needs.appsrv.outputs.sha_tag }}
          kustomize edit set image apisrv=${{ needs.apisrv.outputs.sha_tag }}
          kustomize edit set image authsrv=${{ needs.authsrv.outputs.sha_tag }}
          git add .
          git commit -m "deploy ${SHA_TAG} to edge"
          git push
